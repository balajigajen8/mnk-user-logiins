name: CI/CD Pipeline for Laravel on EKS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-south-1  # Replace with your AWS region

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure using CloudFormation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name mnk-user-logins-stack \
            --template-file cloudformation/eks-ecr-setup.yaml \
            --capabilities CAPABILITY_NAMED_IAM

  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}"
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Building Docker image..."
          docker build -t $IMAGE_URI:latest .
          docker tag $IMAGE_URI:latest $IMAGE_URI:$TIMESTAMP
          echo "Pushing Docker image: latest and $TIMESTAMP"
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:$TIMESTAMP
          echo "IMAGE_URI=$IMAGE_URI:$TIMESTAMP" >> $GITHUB_ENV

  deploy-to-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure kubectl
        uses: aws-actions/configure-kubeconfig@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Application to EKS
        run: |
          echo "Deploying application to EKS..."
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.DEPLOYMENT_NAME }}=${{ env.IMAGE_URI }} --record
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/services.yaml
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
