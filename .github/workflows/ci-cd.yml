name: CI/CD for Laravel on EKS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.REGION }}
  ECR_REPOSITORY: mnk-user-logins-repo
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name mnk-user-logins-stack \
            --template-file cloudformation/eks-ecr-setup.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides KeyName=mnks

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Tag Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker build -t $IMAGE_URI:latest .
          docker tag $IMAGE_URI:latest $IMAGE_URI:$TIMESTAMP
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Push Docker Image to ECR
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:$TIMESTAMP

  deploy-to-eks:
    name: Deploy Laravel Application
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure kubectl
        uses: aws-actions/eks-update-kubeconfig@v1
        with:
          aws-region: ${{ secrets.REGION }}
          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Application
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
          TIMESTAMP=$(echo ${{ secrets.TIMESTAMP }})
          sed -i "s|<IMAGE_URI>|$IMAGE_URI:$TIMESTAMP|g" kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/services.yaml
          kubectl rollout status deployment/mnk-user-logins
